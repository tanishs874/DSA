/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        ListNode dummy = new ListNode(0);
        ListNode previous = dummy;
        dummy.next = head;
        ListNode curr = head;
        for(int i=0;i<left-1;i++){
            previous = previous.next;
            curr = curr.next;
        }
        ListNode subhead = curr;
        ListNode pre = null;
        for(int i=0;i<right-left+1;i++){
            ListNode temp = curr.next;
            curr.next = pre;
            pre = curr;
            curr = temp;
        }
        previous.next=pre;
        subhead.next=curr;
        return dummy.next;
    }
}